// <auto-generated />
using Ethix_NG_API.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace EthixNGAPI.Migrations
{
    [DbContext(typeof(Ethix_NGContext))]
    [Migration("20180403164301_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ethix_NG_API.Model.Currency", b =>
                {
                    b.Property<int>("currencyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ISO_Code")
                        .HasMaxLength(3);

                    b.Property<string>("currency")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("currencyId");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("Ethix_NG_API.Model.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CustmerName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("CustomerAccountAccId");

                    b.Property<DateTime>("OpenDate");

                    b.HasKey("CustomerId");

                    b.HasIndex("CustomerAccountAccId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Ethix_NG_API.Model.CustomerAccount", b =>
                {
                    b.Property<int>("AccId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Acc_Type")
                        .HasMaxLength(2);

                    b.Property<string>("Class_Code")
                        .HasMaxLength(3);

                    b.Property<int>("CurrencyId");

                    b.Property<int>("CustomerId");

                    b.Property<decimal>("Openning_Bal");

                    b.HasKey("AccId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("CustomerAccounts");
                });

            modelBuilder.Entity("Ethix_NG_API.Model.ExchangeRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<int>("FromCurrencyId");

                    b.Property<string>("Operator")
                        .HasMaxLength(1);

                    b.Property<int>("ToCurrencyId");

                    b.Property<int?>("currencyId");

                    b.HasKey("Id");

                    b.HasIndex("currencyId");

                    b.ToTable("ExchangeRates");
                });

            modelBuilder.Entity("Ethix_NG_API.Model.Customer", b =>
                {
                    b.HasOne("Ethix_NG_API.Model.CustomerAccount")
                        .WithMany("Customer")
                        .HasForeignKey("CustomerAccountAccId");
                });

            modelBuilder.Entity("Ethix_NG_API.Model.CustomerAccount", b =>
                {
                    b.HasOne("Ethix_NG_API.Model.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ethix_NG_API.Model.ExchangeRate", b =>
                {
                    b.HasOne("Ethix_NG_API.Model.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("currencyId");
                });
#pragma warning restore 612, 618
        }
    }
}
